# Specify the parent image from which we build (20.04 comes with Python 3.8)
FROM ubuntu:22.04 as base

# Input arguments, placeholder atm (if you need different img for local dev, and another for cloud)
ARG DEPLOY_IN=local
ENV DEPLOY_ENV $DEPLOY_IN

# By default, use the "full set of R&D libraries" (=dev), add later =prod
ARG IMAGE_TYPE=dev
ENV PROD_IMAGE $IMAGE_TYPE

# Create a non-root user
ENV USER minivessuser
ENV HOME /home/$USER
RUN useradd -m $USER && echo $USER:$USER && \
    chown $USER:$USER $HOME

# Copy your Poetry files for Python dependencies
COPY ./pyproject.toml ./poetry.lock ./

# "Layer with the basics installed (and those not needed after, uninstalled)"
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update -y && \
    apt-get install -y --no-install-recommends apt-utils && \
    apt install software-properties-common curl unzip groff wget -y && \
    apt-get install git-all -y && \
    # Install latest Python 3.8
    add-apt-repository ppa:deadsnakes/ppa && \
    apt install -y python3-pip python3.8-dev python3.8-distutils python3.8-venv && \
    ln -sf /usr/bin/python3.8 /usr/bin/python3 && \
    ln -sf /usr/bin/python3.8 /usr/bin/python && \
    # Install mountpoint-s3
    wget https://s3.amazonaws.com/mountpoint-s3-release/latest/x86_64/mount-s3.deb && \
    apt-get install -y ./mount-s3.deb && \
    rm ./mount-s3.deb && \
    mount-s3 --version && \
    # Install AWS CLI v2 \
    #  => => # aws-cli/2.13.28 Python/3.11.6 Linux/6.2.0-34-generic exe/x86_64.ubuntu.20 prompt/off
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
	./aws/install && \
    /usr/local/bin/aws --version && \
    rm ./awscliv2.zip && \
    # Install Poetry
    curl -sSL https://install.python-poetry.org | python3 && \
    $HOME/.local/bin/poetry --version && \
    $HOME/.local/bin/poetry export --format requirements.txt --without-hashes --output $HOME/requirements.txt && \
    curl -sSL https://install.python-poetry.org | python3 - --uninstall && \
    # Clean up
    # apt remove -y curl unzip groff wget && \
    apt-get clean && \
    apt-get autoclean && \
    apt-get autoremove --purge  -y && \
    rm -rf /var/lib/apt/lists/* # clean package lists that are downloaded with apt-get update

# Install the required packages without Poetry:
RUN pip install --disable-pip-version-check --no-cache-dir -r $HOME/requirements.txt

# These warning remain from this "pip install", examine later
#    Attempting uninstall: cryptography
# => => #     Found existing installation: cryptography 3.4.8
# => => #     Not uninstalling cryptography at /usr/lib/python3/dist-packages, outside environment /usr
# => => #     Can't uninstall 'cryptography'. No files were found to uninstall.

# NVIDIA
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility



USER $USER
